/*! Team Us*/
var mongoose=require("mongoose"),Bookshelf=require("bookshelf"),path=require("path"),grunt=require("grunt");mongoose.connect("mongodb://localhost/db");var db=mongoose.connection;db.on("error",console.error.bind(console,"connection error:")),db.once("open",function(a){});var userSchema=mongoose.Schema({username:String,password:String});module.exports=db;var request=require("request"),crypto=require("crypto"),bcrypt=require("bcrypt-nodejs"),util=require("../lib/utility"),db=require("../app/config"),User=require("../app/models/user"),Link=require("../app/models/link"),Users=require("../app/collections/users"),Links=require("../app/collections/links");exports.renderIndex=function(a,b){b.render("index")},exports.signupUserForm=function(a,b){b.render("signup")},exports.loginUserForm=function(a,b){b.render("login")},exports.logoutUser=function(a,b){a.session.destroy(function(){b.redirect("/login")})},exports.fetchLinks=function(a,b){Links.reset().fetch().then(function(a){b.send(200,a.models)})},exports.saveLink=function(a,b){var c=a.body.url;return util.isValidUrl(c)?void new Link({url:c}).fetch().then(function(d){d?b.send(200,d.attributes):util.getUrlTitle(c,function(d,e){if(d)return console.log("Error reading URL heading: ",d),b.send(404);var f=new Link({url:c,title:e,base_url:a.headers.origin});f.save().then(function(a){Links.add(a),b.send(200,a)})})}):(console.log("Not a valid url: ",c),b.send(404))},exports.loginUser=function(a,b){var c=a.body.username,d=a.body.password;new User({username:c}).fetch().then(function(c){c?c.comparePassword(d,function(d){d?util.createSession(a,b,c):b.redirect("/login")}):b.redirect("/login")})},exports.signupUser=function(a,b){var c=a.body.username,d=a.body.password;new User({username:c}).fetch().then(function(e){if(e)console.log("Account already exists"),b.redirect("/signup");else{var f=new User({username:c,password:d});f.save().then(function(c){util.createSession(a,b,c),Users.add(c)})}})},exports.navToLink=function(a,b){new Link({code:a.params[0]}).fetch().then(function(a){a?a.set({visits:a.get("visits")+1}).save().then(function(){return b.redirect(a.get("url"))}):b.redirect("/")})};var request=require("request");exports.getUrlTitle=function(a,b){request(a,function(c,d,e){if(c)return console.log("Error reading url heading: ",c),b(c);var f=/<title>(.*)<\/title>/,g=e.match(f),h=g?g[1]:a;return b(c,h)})};var rValidUrl=/^(?!mailto:)(?:(?:https?|ftp):\/\/)?(?:\S+(?::\S*)?@)?(?:(?:(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[0-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))|localhost)(?::\d{2,5})?(?:\/[^\s]*)?$/i;exports.isValidUrl=function(a){return a.match(rValidUrl)},exports.isLoggedIn=function(a,b){return a.session?!!a.session.user:!1},exports.checkUser=function(a,b,c){exports.isLoggedIn(a)?c():b.redirect("/login")},exports.createSession=function(a,b,c){return a.session.regenerate(function(){a.session.user=c,b.redirect("/")})};var request=require("supertest"),express=require("express"),expect=require("chai").expect,app=require("../server-config.js"),db=require("../app/config"),User=require("../app/models/user"),Link=require("../app/models/link");xdescribe("",function(){beforeEach(function(a){request(app).get("/logout").end(function(b,c){Link.remove({url:"http://www.roflzoo.com/"}).exec(),User.remove({username:"Savannah"}).exec(),User.remove({username:"Phillip"}).exec(),a()})}),describe("Link creation: ",function(){it("Only shortens valid urls, returning a 404 - Not found for invalid urls",function(a){request(app).post("/links").send({url:"definitely not a valid url"}).expect(404).end(a)}),describe("Shortening links:",function(){it("Responds with the short code",function(a){request(app).post("/links").send({url:"http://www.roflzoo.com/"}).expect(200).expect(function(a){expect(a.body.url).to.equal("http://www.roflzoo.com/"),expect(a.body.code).to.be.ok}).end(a)}),it("New links create a database entry",function(a){request(app).post("/links").send({url:"http://www.roflzoo.com/"}).expect(200).expect(function(a){Link.findOne({url:"http://www.roflzoo.com/"}).exec(function(a,b){a&&console.log(a),expect(b.url).to.equal("http://www.roflzoo.com/")})}).end(a)}),it("Fetches the link url title",function(a){request(app).post("/links").send({url:"http://www.roflzoo.com/"}).expect(200).expect(function(a){Link.findOne({url:"http://www.roflzoo.com/"}).exec(function(a,b){a&&console.log(a),expect(b.title).to.equal("Rofl Zoo - Daily funny animal pictures")})}).end(a)})}),describe("With previously saved urls: ",function(){beforeEach(function(a){link=new Link({url:"http://www.roflzoo.com/",title:"Rofl Zoo - Daily funny animal pictures",base_url:"http://127.0.0.1:4568",visits:0}),link.save(function(){a()})}),it("Returns the same shortened code if attempted to add the same URL twice",function(a){var b=link.code;request(app).post("/links").send({url:"http://www.roflzoo.com/"}).expect(200).expect(function(a){var c=a.body.code;expect(c).to.equal(b)}).end(a)}),it("Shortcode redirects to correct url",function(a){var b=link.code;request(app).get("/"+b).expect(302).expect(function(a){var b=a.headers.location;expect(b).to.equal("http://www.roflzoo.com/")}).end(a)})})}),describe("Priviledged Access:",function(){it("Redirects to login page if a user tries to access the main page and is not signed in",function(a){request(app).get("/").expect(302).expect(function(a){expect(a.headers.location).to.equal("/login")}).end(a)}),it("Redirects to login page if a user tries to create a link and is not signed in",function(a){request(app).get("/create").expect(302).expect(function(a){expect(a.headers.location).to.equal("/login")}).end(a)}),it("Redirects to login page if a user tries to see all of the links and is not signed in",function(a){request(app).get("/links").expect(302).expect(function(a){expect(a.headers.location).to.equal("/login")}).end(a)})}),describe("Account Creation:",function(){it("Signup creates a new user",function(a){request(app).post("/signup").send({username:"Svnh",password:"Svnh"}).expect(302).expect(function(){User.findOne({username:"Svnh"}).exec(function(a,b){expect(b.username).to.equal("Svnh")})}).end(a)}),it("Successful signup logs in a new user",function(a){request(app).post("/signup").send({username:"Phillip",password:"Phillip"}).expect(302).expect(function(a){expect(a.headers.location).to.equal("/"),request(app).get("/logout").expect(200)}).end(a)})}),describe("Account Login:",function(){beforeEach(function(a){new User({username:"Phillip",password:"Phillip"}).save(function(){a()})}),it("Logs in existing users",function(a){request(app).post("/login").send({username:"Phillip",password:"Phillip"}).expect(302).expect(function(a){expect(a.headers.location).to.equal("/")}).end(a)}),it("Users that do not exist are kept on login page",function(a){request(app).post("/login").send({username:"Fred",password:"Fred"}).expect(302).expect(function(a){expect(a.headers.location).to.equal("/login")}).end(a)})})});
//# sourceMappingURL=output.min.map